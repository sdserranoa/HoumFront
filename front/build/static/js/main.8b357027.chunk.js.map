{"version":3,"sources":["components/Footer.js","components/Navmenu.js","components/PokemonDetail.js","components/PokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","style","backgroundColor","color","Row","Col","xs","md","textAlign","Component","Navmenu","Navbar","bg","Brand","href","Toggle","Nav","Link","PokemonDetail","props","state","image","info","handleClose","bind","this","setState","close","pokemon","sprites","front_default","front_female","front_shiny","front_shiny_female","child","push","Button","variant","onClick","handleImageChange","React","createElement","justifyContent","weight","height","stats","base_stat","Table","hover","size","moves","map","i","k","move","console","log","Modal","show","onHide","dialogClassName","Header","closeButton","Title","name","Body","alignContent","renderImageButton","borderColor","borderWidth","borderStyle","borderRadius","src","renderImage","alt","width","ButtonGroup","handleInfoChange","renderInfo","PokemonList","totalPokemon","pokemonList","showSpinner","nextPage","typesList","showLoadMoreSpinner","showLoadAllSpinner","showDetail","pokemonDetailInfo","abilities","base_experience","forms","game_indices","held_items","id","is_default","location_area_encounters","order","past_types","species","types","searchTerm","loadMore","loadAll","closeDetail","fetch","process","method","then","res","json","data","next","count","loadPokemonInfo","results","catch","err","list","arr","forEach","t","pokeArr","requests","item","Promise","resolve","url","pokemonInfo","all","aux","concat","loadPokemonFilterInfo","filter","filterType","p","Spinner","animation","role","sm","xl","xxl","Card","Img","renderLoadMore","renderLoadAll","Form","InputGroup","Prepend","FormControl","placeholder","aria-label","DropdownButton","title","Dropdown","Item","renderFilters","renderPokemon","App","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b357027.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mt-5\" style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <Row className=\"p-3\">\r\n                    <Col xs={12} md={6}>\r\n                        <Row>\r\n                            <Col xs={12} md={6} style={{ textAlign: 'center' }}>\r\n                                <h1>PokeApp</h1>\r\n                            </Col>\r\n                            <Col xs={12} md={6}></Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <Row>\r\n                            <Col xs={12} md={6} style={{ textAlign: 'center' }}>\r\n                                Prueba tecnica frontend HOUM\r\n                            </Col>\r\n                            <Col xs={12} md={6} style={{ textAlign: 'center' }}>\r\n                                Autor: Santiago Serrano A\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nclass Navmenu extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"light\">\r\n                    <Navbar.Brand href=\"#home\">PokeApp</Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                    <Nav className=\"justify-content-center\">\r\n                        <Nav.Link href=\"#home\">Pokemon</Nav.Link>\r\n                        <Nav.Link href=\"#features\">Locations</Nav.Link>\r\n                        <Nav.Link href=\"#pricing\">Items</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navmenu;","import React, { Component } from 'react';\r\nimport { Button, Modal, Row, Col, ButtonGroup, Table } from 'react-bootstrap';\r\nimport { RiSwordFill, RiHeartFill, RiShieldFill, RiSwordLine, RiShieldLine } from 'react-icons/ri';\r\nimport { GiRunningShoe, GiWeight } from 'react-icons/gi'\r\nimport { FaRulerVertical } from 'react-icons/fa'\r\n\r\nclass PokemonDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            image: \"front_default\",\r\n            info: \"info\"\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n    }\r\n\r\n    handleImageChange(image) {\r\n        this.setState({ image: image })\r\n    }\r\n\r\n    handleInfoChange(info) {\r\n        this.setState({ info: info })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            image: \"front_default\",\r\n            info: \"info\"\r\n        })\r\n        this.props.close()\r\n    }\r\n\r\n    renderImage() {\r\n        if (this.state.image === \"front_default\") {\r\n            return this.props.pokemon.sprites.front_default\r\n        } else if (this.state.image === \"front_female\") {\r\n            return this.props.pokemon.sprites.front_female\r\n        } else if (this.state.image === \"front_shiny\") {\r\n            return this.props.pokemon.sprites.front_shiny\r\n        } else if (this.state.image === \"front_shiny_female\") {\r\n            return this.props.pokemon.sprites.front_shiny_female\r\n        }\r\n    }\r\n\r\n    renderImageButton() {\r\n        var child = []\r\n        if (this.props.pokemon.sprites.front_default !== null) {\r\n            child.push(<Button variant=\"outline-orng\" key={1} onClick={() => this.handleImageChange(\"front_default\")}>Default</Button>)\r\n        }\r\n        if (this.props.pokemon.sprites.front_shiny !== null) {\r\n            child.push(<Button variant=\"outline-orng\" key={2} onClick={() => this.handleImageChange(\"front_shiny\")}>Shiny</Button>)\r\n        }\r\n        if (this.props.pokemon.sprites.front_female !== null) {\r\n            child.push(<Button variant=\"outline-orng\" key={3} onClick={() => this.handleImageChange(\"front_female\")}>Female</Button>)\r\n        }\r\n        if (this.props.pokemon.sprites.front_shiny_female !== null) {\r\n            child.push(<Button variant=\"outline-orng\" key={4} onClick={() => this.handleImageChange(\"front_shiny_female\")}>Female Shiny</Button>)\r\n        }\r\n        let html = React.createElement(\"div\", { className: \"btn-group\" }, child)\r\n        return html\r\n    }\r\n\r\n    renderInfo() {\r\n        if (this.state.info === \"info\") {\r\n            return <div>\r\n                <Row style={{ justifyContent: 'center' }}>\r\n                    <h3>INFO</h3>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><GiWeight className=\"mx-4 my-2\" />Weight: {this.props.pokemon.weight / 10} kg</h4>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><FaRulerVertical className=\"mx-4 my-2\" />Height: {this.props.pokemon.height / 10} m</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{ justifyContent: 'center' }}>\r\n                    <h3>STATS</h3>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiHeartFill className=\"mx-4 my-2\" />Hp: {this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><GiRunningShoe className=\"mx-4 my-2\" />Speed: {this.props.pokemon.stats[5].base_stat}</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiSwordFill className=\"mx-4 my-2\" />Atk: {this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiShieldFill className=\"mx-4 my-2\" />Def: {this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiSwordLine className=\"mx-4 my-2\" />SP Atk:{this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiShieldLine className=\"mx-4 my-2\" />SP Def:{this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        } else if (this.state.info === \"moves\") {\r\n            return <div>\r\n                <Row>\r\n                    <Col>\r\n                        <Table hover size=\"sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>pp</th>\r\n                                    <th>Accuracy</th>\r\n                                    <th>Damage Class</th>\r\n                                    <th>Type</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.pokemon.moves.map((i, k) => {\r\n                                    let move = i.move\r\n                                    console.log(move);\r\n                                    return (\r\n                                        <tr key={k}>\r\n                                            <td>{}</td>\r\n                                            <td>Mark</td>\r\n                                            <td>Otto</td>\r\n                                            <td>@mdo</td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div>\r\n                <Modal show={this.props.show} onHide={this.handleClose} dialogClassName=\"my-modal\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.props.pokemon.name}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{ alignContent: 'center' }}>\r\n                        <Row>\r\n                            <Col xs={12} md={5}>\r\n                                <Row className=\"mb-4\">\r\n                                    <Col style={{ textAlign: 'center' }}>\r\n                                        {this.renderImageButton()}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"mb-4\">\r\n                                    <Col style={{ textAlign: 'center' }}>\r\n                                        <img style={{\r\n                                            borderColor: 'darkgray',\r\n                                            borderWidth: '1px',\r\n                                            borderStyle: 'solid',\r\n                                            borderRadius: '30px'\r\n                                        }}\r\n                                            src={this.renderImage()}\r\n                                            alt=\"\"\r\n                                            width='60%'></img>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={12} md={7}>\r\n                                <Row className=\"mb-4\">\r\n                                    <Col style={{ textAlign: 'center' }}>\r\n                                        <ButtonGroup>\r\n                                            <Button variant=\"outline-orng\" onClick={() => this.handleInfoChange(\"info\")}>Info</Button>\r\n                                            <Button variant=\"outline-orng\" onClick={() => this.handleInfoChange(\"moves\")}>Moves</Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {this.renderInfo()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonDetail;","import React, { Component } from 'react';\r\nimport { Spinner, Card, Button, Col, Row, Dropdown, DropdownButton, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\nimport PokemonDetail from './PokemonDetail';\r\n\r\nclass PokemonList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            totalPokemon: 0,\r\n            pokemonList: [],\r\n            showSpinner: true,\r\n            nextPage: \"\",\r\n            typesList: [],\r\n            showLoadMoreSpinner: false,\r\n            showLoadAllSpinner: false,\r\n            showDetail: false,\r\n            pokemonDetailInfo: {\r\n                abilities: [],\r\n                base_experience: 0,\r\n                forms: [],\r\n                game_indices: [],\r\n                height: 0,\r\n                held_items: [],\r\n                id: 0,\r\n                is_default: true,\r\n                location_area_encounters: \"\",\r\n                moves: [],\r\n                name: \"\",\r\n                order: 0,\r\n                past_types: [],\r\n                species: {},\r\n                sprites: { front_default: \"\" },\r\n                stats: [\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    }\r\n                ],\r\n                types: [],\r\n                weight: 0,\r\n                searchTerm: \"\"\r\n            }\r\n        }\r\n\r\n        this.loadMore = this.loadMore.bind(this)\r\n        this.loadAll = this.loadAll.bind(this)\r\n        this.showDetail = this.showDetail.bind(this)\r\n        this.closeDetail = this.closeDetail.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch(process.env.REACT_APP_API_URL + \"pokemon\", {\r\n            method: 'GET'\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            this.setState({ nextPage: data.next, totalPokemon: data.count })\r\n            this.loadPokemonInfo(data.results)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        fetch(process.env.REACT_APP_API_URL + \"type/?limit=100\", {\r\n            method: 'GET'\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            let list = data.results\r\n            let arr = []\r\n            list.forEach(t => {\r\n                arr.push(t.name)\r\n            });\r\n            this.setState({ typesList: arr })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        /* fetch(\"https://pokeapi.co/api/v2/pokemon/1\", {\r\n            method: 'GET'\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            console.log(data);\r\n        }).catch(err => {\r\n            console.log(err)\r\n        }) */\r\n    }\r\n\r\n    loadPokemonInfo(data) {\r\n        let pokeArr = []\r\n        let requests = data.map((item) => {\r\n            return new Promise(resolve => {\r\n                fetch(item.url, {\r\n                    method: 'GET'\r\n                }).then(res => {\r\n                    return res.json()\r\n                }).then(pokemonInfo => {\r\n                    pokeArr.push(pokemonInfo)\r\n                    resolve()\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n            })\r\n        })\r\n        Promise.all(requests).then(() => {\r\n            let aux = this.state.pokemonList\r\n            pokeArr = aux.concat(pokeArr)\r\n            this.setState({ pokemonList: pokeArr, showSpinner: false, showLoadMoreSpinner: false })\r\n        }\r\n        )\r\n    }\r\n\r\n    loadMore() {\r\n        this.setState({ showLoadMoreSpinner: true }, () => {\r\n            fetch(this.state.nextPage, {\r\n                method: 'GET'\r\n            }).then(res => {\r\n                return res.json()\r\n            }).then(data => {\r\n                this.setState({ nextPage: data.next })\r\n                this.loadPokemonInfo(data.results)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    loadAll() {\r\n        this.setState({ showLoadAllSpinner: true }, () => {\r\n            fetch(process.env.REACT_APP_API_URL + \"pokemon/?limit=\" + this.state.totalPokemon, {\r\n                method: 'GET'\r\n            }).then(res => {\r\n                return res.json()\r\n            }).then(data => {\r\n                this.setState({ nextPage: data.next, totalPokemon: data.count })\r\n                this.loadPokemonFilterInfo(data.results)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    filter(filter, filterType) {\r\n        fetch(process.env.REACT_APP_API_URL + filterType + \"/\" + filter, {\r\n            method: 'GET'\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            this.setState({ nextPage: null })\r\n            let aux = []\r\n            data.pokemon.forEach(p => {\r\n                aux.push({ url: p.pokemon.url })\r\n            })\r\n            this.loadPokemonFilterInfo(aux)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    loadPokemonFilterInfo(data) {\r\n        let pokeArr = []\r\n        this.setState({ showSpinner: true }, () => {\r\n            let requests = data.map((item) => {\r\n                return new Promise(resolve => {\r\n                    fetch(item.url, {\r\n                        method: 'GET'\r\n                    }).then(res => {\r\n                        return res.json()\r\n                    }).then(pokemonInfo => {\r\n                        pokeArr.push(pokemonInfo)\r\n                        resolve()\r\n                    }).catch(err => {\r\n                        console.log(err)\r\n                    })\r\n                })\r\n            })\r\n            Promise.all(requests).then(() => {\r\n                this.setState({ pokemonList: pokeArr, showSpinner: false, showLoadAllSpinner: false })\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    showDetail(info) {\r\n        this.setState({ showDetail: true, pokemonDetailInfo: info })\r\n    }\r\n\r\n    closeDetail() {\r\n        this.setState({\r\n            showDetail: false,\r\n            pokemonDetailInfo: {\r\n                abilities: [],\r\n                base_experience: 0,\r\n                forms: [],\r\n                game_indices: [],\r\n                height: 0,\r\n                held_items: [],\r\n                id: 0,\r\n                is_default: true,\r\n                location_area_encounters: \"\",\r\n                moves: [],\r\n                name: \"\",\r\n                order: 0,\r\n                past_types: [],\r\n                species: {},\r\n                sprites: { front_default: \"\" },\r\n                stats: [\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    }\r\n                ],\r\n                types: [],\r\n                weight: 0\r\n            }\r\n        })\r\n    }\r\n\r\n    renderLoadMore() {\r\n\r\n        if (this.state.nextPage === null) {\r\n            return <div></div>\r\n        }\r\n\r\n        if (this.state.showLoadMoreSpinner) {\r\n            return <Button variant=\"outline-orng\" onClick={this.loadMore}>\r\n                <Spinner size=\"sm\" animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Cargando...</span>\r\n                </Spinner>\r\n            </Button>\r\n        } else {\r\n            return <Button variant=\"outline-orng\" onClick={this.loadMore}>\r\n                Cargar mas\r\n            </Button>\r\n        }\r\n    }\r\n\r\n    renderLoadAll() {\r\n\r\n        if (this.state.nextPage === null) {\r\n            return <div></div>\r\n        }\r\n\r\n        if (this.state.showLoadAllSpinner) {\r\n            return <Button variant=\"outline-orng\" onClick={this.loadAll}>\r\n                <Spinner size=\"sm\" animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Cargando...</span>\r\n                </Spinner>\r\n            </Button>\r\n        } else {\r\n            return <Button variant=\"outline-orng\" onClick={this.loadAll}>\r\n                Cargar todos\r\n            </Button>\r\n        }\r\n    }\r\n\r\n    renderPokemon() {\r\n        if (this.state.showSpinner) {\r\n            return <div className=\"spinner-container\">\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Cargando...</span>\r\n                </Spinner>\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                <Row className=\"mx-5\">\r\n                    {this.state.pokemonList.map((i, k) => {\r\n                        return (\r\n                            <Col xs={12} sm={6} md={3} xl={3} xxl={2} key={k}>\r\n                                <Card className=\"my-3\">\r\n                                    <Card.Img variant=\"top\" src={i.sprites.front_default} />\r\n                                    <Card.Body>\r\n                                        <Card.Title>{i.name}</Card.Title>\r\n                                        <Row>\r\n                                            <Col>{i.height / 10} m</Col>\r\n                                            <Col>{i.weight / 10} kg</Col>\r\n                                        </Row>\r\n                                        <Row style={{ justifyContent: 'center' }}>Stats:</Row>\r\n                                        <Row>\r\n                                            <Col>ATK:</Col>\r\n                                            <Col>DEF:</Col>\r\n                                            <Col>SPEED:</Col>\r\n                                        </Row>\r\n                                        <Button variant=\"orng\" onClick={() => this.showDetail(i)}>Ver detalles</Button>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n                <Row className=\"m-3\" style={{ justifyContent: 'center' }}>\r\n                    <ButtonGroup>\r\n                        {this.renderLoadMore()}\r\n                        {this.renderLoadAll()}\r\n                    </ButtonGroup>\r\n\r\n                </Row>\r\n            </div>\r\n        }\r\n\r\n    }\r\n\r\n    renderFilters() {\r\n        return <Row className=\"mt-3\">\r\n            <Col xs={1}></Col>\r\n            <Col xs={12} md={10}>\r\n                <Form>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <Button>\r\n                                Filtrar\r\n                            </Button>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            placeholder=\"Buscar...\"\r\n                            aria-label=\"Search\"\r\n                        />\r\n                        <DropdownButton className=\"ml-4\" id=\"dropdown-basic-button\" title=\"Type\">\r\n                            {this.state.typesList.map((i, k) => {\r\n                                return (\r\n                                    <Dropdown.Item key={k} onClick={() => this.filter(i, \"type\")}>{i}</Dropdown.Item>\r\n                                )\r\n                            })}\r\n                        </DropdownButton>\r\n                    </InputGroup>\r\n                </Form>\r\n            </Col>\r\n            <Col xs={1}></Col>\r\n        </Row>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PokemonDetail show={this.state.showDetail} pokemon={this.state.pokemonDetailInfo} close={this.closeDetail} />\r\n                {this.renderFilters()}\r\n                {this.renderPokemon()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonList;","import './App.css';\nimport Footer from './components/Footer';\nimport Navmenu from './components/Navmenu';\nimport PokemonList from './components/PokemonList';\n\nfunction App() {\n  return (\n    <div>\n      <style type=\"text/css\">\n        {`\n          .btn-orng {\n              background-color: #FF462C;\n              color: #FFF;\n          }\n          .btn-orng:hover {\n              color:#fff;\n              background-color:#DB412B;\n              border-color:#DB412B;\n          }\n          .btn-outline-orng {\n              background-color: #fff;\n              border-color: #FF462C;\n              color: #FF462C;\n          }\n          .btn-outline-orng:hover {\n              color:#fff;\n              background-color:#FF462C;\n              border-color:#FF462C\n          }\n          `}\n      </style>\n      <Navmenu />\n      <PokemonList />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}