{"version":3,"sources":["components/Footer.js","components/ItemsList.js","components/Navmenu.js","components/PokemonDetail.js","components/PokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","style","backgroundColor","color","Row","Col","xs","md","textAlign","Component","ItemsList","props","state","nextPage","count","items","allLoaded","fetch","process","method","then","res","json","data","setState","loadItemsInfo","results","catch","err","console","log","pokeArr","requests","map","item","Promise","resolve","url","pokemonInfo","aux","name","cost","category","fling_power","effect_entries","effect","push","all","concat","title","this","columns","label","options","filter","sort","filterType","print","download","selectableRows","Navmenu","Navbar","bg","Brand","href","Toggle","Nav","Link","PokemonDetail","image","info","moves","handleClose","bind","loadMovesInfo","close","callback","movesArr","pokemon","move","moveInfo","sprites","front_default","front_female","front_shiny","front_shiny_female","child","Button","variant","onClick","handleImageChange","React","createElement","justifyContent","weight","height","types","i","k","type","stats","base_stat","Table","hover","size","pp","accuracy","damage_class","Modal","show","onHide","dialogClassName","Header","closeButton","Title","Body","alignContent","renderImageButton","borderColor","borderWidth","borderStyle","borderRadius","src","renderImage","alt","width","ButtonGroup","handleInfoChange","renderInfo","PokemonList","totalPokemon","pokemonList","showSpinner","typesList","showLoadMoreSpinner","showLoadAllSpinner","showDetail","pokemonDetailInfo","abilities","base_experience","forms","game_indices","held_items","id","is_default","location_area_encounters","order","past_types","species","searchTerm","showClearSearch","loadMore","loadAll","closeDetail","handleSearch","onSearchChange","handleClearSearch","next","loadPokemonInfo","list","arr","forEach","t","e","target","value","loadPokemonFilterInfo","p","preventDefault","x","includes","window","location","reload","Spinner","animation","role","sm","xl","xxl","Card","Img","border","j","l","renderLoadMore","renderLoadAll","Form","onSubmit","noValidate","InputGroup","Prepend","FormControl","placeholder","aria-label","onChange","renderClearSearch","DropdownButton","Dropdown","Item","renderFilters","renderPokemon","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.760c6f0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mt-5\" style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <Row className=\"p-3\">\r\n                    <Col xs={12} md={6}>\r\n                        <Row>\r\n                            <Col xs={12} md={6} style={{ textAlign: 'center' }}>\r\n                                <h1>PokeApp</h1>\r\n                            </Col>\r\n                            <Col xs={12} md={6}></Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <Row>\r\n                            <Col xs={12} md={6} style={{ textAlign: 'center' }}>\r\n                                Prueba tecnica frontend HOUM\r\n                            </Col>\r\n                            <Col xs={12} md={6} style={{ textAlign: 'center' }}>\r\n                                Autor: Santiago Serrano A\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n\r\nclass ItemsList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            nextPage: \"\",\r\n            count: 0,\r\n            items: [],\r\n            allLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(process.env.REACT_APP_API_URL + \"item\", {\r\n            method: 'GET'\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            this.setState({ count: data.count }, () => {\r\n                fetch(process.env.REACT_APP_API_URL + \"item/?limit=\"+this.state.count, {\r\n                    method: 'GET'\r\n                }).then(res => {\r\n                    return res.json()\r\n                }).then(data => {\r\n                    this.loadItemsInfo(data.results)\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    loadItemsInfo(data) {\r\n        let pokeArr = []\r\n        let requests = data.map((item) => {\r\n            return new Promise(resolve => {\r\n                fetch(item.url, {\r\n                    method: 'GET'\r\n                }).then(res => {\r\n                    return res.json()\r\n                }).then(pokemonInfo => {\r\n                    console.log(pokemonInfo)\r\n                    let aux = {\r\n                        name: pokemonInfo.name,\r\n                        cost: pokemonInfo.cost,\r\n                        category: pokemonInfo.category.name,\r\n                        fling_power: pokemonInfo.fling_power,\r\n                        effect_entries: pokemonInfo.effect_entries[0].effect\r\n                    }\r\n                    pokeArr.push(aux)\r\n                    resolve()\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n            })\r\n        })\r\n        Promise.all(requests).then(() => {\r\n            let aux = this.state.items\r\n            pokeArr = aux.concat(pokeArr)\r\n            this.setState({ items: pokeArr })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n                name: \"name\",\r\n                label: \"Nombre\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: true,\r\n                }\r\n            },\r\n            {\r\n                name: \"cost\",\r\n                label: \"Costo\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: true,\r\n                }\r\n            },\r\n            {\r\n                name: \"category\",\r\n                label: \"Categoría\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: true,\r\n                }\r\n            },\r\n            {\r\n                name: \"fling_power\",\r\n                label: \"Fling Power\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: true,\r\n                }\r\n            },\r\n            {\r\n                name: \"effect_entries\",\r\n                label: \"Effect\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"m-5\">\r\n                <MUIDataTable\r\n                    title={\"Items List\"}\r\n                    data={this.state.items}\r\n                    columns={columns}\r\n                    options={{\r\n                        filterType: 'dropdown',\r\n                        count: this.state.count,\r\n                        print: false,\r\n                        download: false,\r\n                        selectableRows: false,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemsList;","import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nclass Navmenu extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"light\">\r\n                    <Navbar.Brand href=\"/\">PokeApp</Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                    <Nav className=\"justify-content-center\">\r\n                        <Nav.Link href=\"/\">Pokemon</Nav.Link>\r\n                        <Nav.Link href=\"/items\">Items</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navmenu;","import React, { Component } from 'react';\r\nimport { Button, Modal, Row, Col, ButtonGroup, Table } from 'react-bootstrap';\r\nimport { RiSwordFill, RiHeartFill, RiShieldFill, RiSwordLine, RiShieldLine } from 'react-icons/ri';\r\nimport { GiRunningShoe, GiWeight } from 'react-icons/gi'\r\nimport { FaRulerVertical } from 'react-icons/fa'\r\nimport { CgPokemon } from 'react-icons/cg'\r\n\r\nclass PokemonDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            image: \"front_default\",\r\n            info: \"info\",\r\n            moves: []\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n    }\r\n\r\n    handleImageChange(image) {\r\n        this.setState({ image: image })\r\n    }\r\n\r\n    handleInfoChange(info) {\r\n        if (info === 'moves') {\r\n            this.loadMovesInfo()\r\n        }\r\n        this.setState({ info: info })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            image: \"front_default\",\r\n            info: \"info\"\r\n        })\r\n        this.props.close()\r\n    }\r\n\r\n    loadMovesInfo(callback) {\r\n        let movesArr = []\r\n        let requests = this.props.pokemon.moves.map((item) => {\r\n            return new Promise(resolve=> {\r\n                fetch(item.move.url, {\r\n                    method: 'GET'\r\n                }).then(res => {\r\n                    return res.json()\r\n                }).then(moveInfo => {\r\n                    movesArr.push(moveInfo)\r\n                    resolve()\r\n                })\r\n            })\r\n        })\r\n        Promise.all(requests).then(() => {\r\n            console.log(movesArr);\r\n            this.setState({ moves: movesArr })\r\n        })\r\n    }\r\n\r\n    renderImage() {\r\n        if (this.state.image === \"front_default\") {\r\n            return this.props.pokemon.sprites.front_default\r\n        } else if (this.state.image === \"front_female\") {\r\n            return this.props.pokemon.sprites.front_female\r\n        } else if (this.state.image === \"front_shiny\") {\r\n            return this.props.pokemon.sprites.front_shiny\r\n        } else if (this.state.image === \"front_shiny_female\") {\r\n            return this.props.pokemon.sprites.front_shiny_female\r\n        }\r\n    }\r\n\r\n    renderImageButton() {\r\n        var child = []\r\n        if (this.props.pokemon.sprites.front_default !== null) {\r\n            child.push(<Button variant=\"outline-orng\" key={1} onClick={() => this.handleImageChange(\"front_default\")}>Default</Button>)\r\n        }\r\n        if (this.props.pokemon.sprites.front_shiny !== null) {\r\n            child.push(<Button variant=\"outline-orng\" key={2} onClick={() => this.handleImageChange(\"front_shiny\")}>Shiny</Button>)\r\n        }\r\n        if (this.props.pokemon.sprites.front_female !== null) {\r\n            child.push(<Button variant=\"outline-orng\" key={3} onClick={() => this.handleImageChange(\"front_female\")}>Female</Button>)\r\n        }\r\n        if (this.props.pokemon.sprites.front_shiny_female !== null) {\r\n            child.push(<Button variant=\"outline-orng\" key={4} onClick={() => this.handleImageChange(\"front_shiny_female\")}>Female Shiny</Button>)\r\n        }\r\n        let html = React.createElement(\"div\", { className: \"btn-group\" }, child)\r\n        return html\r\n    }\r\n\r\n    renderInfo() {\r\n        if (this.state.info === \"info\") {\r\n            return <div>\r\n                <Row style={{ justifyContent: 'center' }}>\r\n                    <h3>INFO</h3>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><GiWeight className=\"mx-4 my-2\" />Weight: {this.props.pokemon.weight / 10} kg</h4>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><FaRulerVertical className=\"mx-4 my-2\" />Height: {this.props.pokemon.height / 10} m</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {this.props.pokemon.types.map((i, k) => {\r\n                        return (\r\n                            <Col key={k} xs={12} md={6}>\r\n                                <h4><CgPokemon className=\"mx-4 my-2\" />Type{k}: {i.type.name}</h4>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n                <Row style={{ justifyContent: 'center' }}>\r\n                    <h3>STATS</h3>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiHeartFill className=\"mx-4 my-2\" />Hp: {this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><GiRunningShoe className=\"mx-4 my-2\" />Speed: {this.props.pokemon.stats[5].base_stat}</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiSwordFill className=\"mx-4 my-2\" />Atk: {this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiShieldFill className=\"mx-4 my-2\" />Def: {this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiSwordLine className=\"mx-4 my-2\" />SP Atk:{this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <h4><RiShieldLine className=\"mx-4 my-2\" />SP Def:{this.props.pokemon.stats[1].base_stat}</h4>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        } else if (this.state.info === \"moves\") {\r\n            return <div>\r\n                <Row>\r\n                    <Col>\r\n                        <Table hover size=\"sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>pp</th>\r\n                                    <th>Accuracy</th>\r\n                                    <th>Damage Class</th>\r\n                                    <th>Type</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.moves.map((i, k) => {\r\n                                    return (\r\n                                        <tr key={k}>\r\n                                            <td>{i.name}</td>\r\n                                            <td>{i.pp}</td>\r\n                                            <td>{i.accuracy}</td>\r\n                                            <td>{i.damage_class.name}</td>\r\n                                            <td>{i.type.name}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props);\r\n        return (\r\n            <div>\r\n                <Modal show={this.props.show} onHide={this.handleClose} dialogClassName=\"my-modal\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.props.pokemon.name}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{ alignContent: 'center' }}>\r\n                        <Row>\r\n                            <Col xs={12} md={5}>\r\n                                <Row className=\"mb-4\">\r\n                                    <Col style={{ textAlign: 'center' }}>\r\n                                        {this.renderImageButton()}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"mb-4\">\r\n                                    <Col style={{ textAlign: 'center' }}>\r\n                                        <img style={{\r\n                                            borderColor: 'darkgray',\r\n                                            borderWidth: '1px',\r\n                                            borderStyle: 'solid',\r\n                                            borderRadius: '30px'\r\n                                        }}\r\n                                            src={this.renderImage()}\r\n                                            alt=\"\"\r\n                                            width='60%'></img>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={12} md={7}>\r\n                                <Row className=\"mb-4\">\r\n                                    <Col style={{ textAlign: 'center' }}>\r\n                                        <ButtonGroup>\r\n                                            <Button variant=\"outline-orng\" onClick={() => this.handleInfoChange(\"info\")}>Info</Button>\r\n                                            <Button variant=\"outline-orng\" onClick={() => this.handleInfoChange(\"moves\")}>Moves</Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {this.renderInfo()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonDetail;","import React, { Component } from 'react';\r\nimport {\r\n    Spinner,\r\n    Card, Button,\r\n    Col,\r\n    Row,\r\n    Dropdown,\r\n    DropdownButton,\r\n    ButtonGroup,\r\n    InputGroup,\r\n    FormControl,\r\n    Form\r\n} from 'react-bootstrap';\r\nimport PokemonDetail from './PokemonDetail';\r\n\r\nclass PokemonList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            totalPokemon: 0,\r\n            pokemonList: [],\r\n            showSpinner: true,\r\n            nextPage: \"\",\r\n            typesList: [],\r\n            showLoadMoreSpinner: false,\r\n            showLoadAllSpinner: false,\r\n            showDetail: false,\r\n            pokemonDetailInfo: {\r\n                abilities: [],\r\n                base_experience: 0,\r\n                forms: [],\r\n                game_indices: [],\r\n                height: 0,\r\n                held_items: [],\r\n                id: 0,\r\n                is_default: true,\r\n                location_area_encounters: \"\",\r\n                moves: [],\r\n                name: \"\",\r\n                order: 0,\r\n                past_types: [],\r\n                species: {},\r\n                sprites: { front_default: \"\" },\r\n                stats: [\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    }\r\n                ],\r\n                types: [],\r\n                weight: 0,\r\n                searchTerm: \"\",\r\n                showClearSearch: false\r\n            }\r\n        }\r\n\r\n        this.loadMore = this.loadMore.bind(this)\r\n        this.loadAll = this.loadAll.bind(this)\r\n        this.showDetail = this.showDetail.bind(this)\r\n        this.closeDetail = this.closeDetail.bind(this)\r\n        this.handleSearch = this.handleSearch.bind(this)\r\n        this.onSearchChange = this.onSearchChange.bind(this)\r\n        this.handleClearSearch = this.handleClearSearch.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch(process.env.REACT_APP_API_URL + \"pokemon\", {\r\n            method: 'GET'\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            this.setState({ nextPage: data.next, totalPokemon: data.count })\r\n            this.loadPokemonInfo(data.results)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        fetch(process.env.REACT_APP_API_URL + \"type/?limit=100\", {\r\n            method: 'GET'\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            let list = data.results\r\n            let arr = []\r\n            list.forEach(t => {\r\n                arr.push(t.name)\r\n            });\r\n            this.setState({ typesList: arr })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        /* fetch(\"https://pokeapi.co/api/v2/pokemon/1\", {\r\n            method: 'GET'\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            console.log(data);\r\n        }).catch(err => {\r\n            console.log(err)\r\n        }) */\r\n    }\r\n\r\n    onSearchChange(e) {\r\n        this.setState({ searchTerm: e.target.value })\r\n    }\r\n\r\n    loadPokemonInfo(data) {\r\n        let pokeArr = []\r\n        let requests = data.map((item) => {\r\n            return new Promise(resolve => {\r\n                fetch(item.url, {\r\n                    method: 'GET'\r\n                }).then(res => {\r\n                    return res.json()\r\n                }).then(pokemonInfo => {\r\n                    pokeArr.push(pokemonInfo)\r\n                    resolve()\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n            })\r\n        })\r\n        Promise.all(requests).then(() => {\r\n            let aux = this.state.pokemonList\r\n            pokeArr = aux.concat(pokeArr)\r\n            this.setState({ pokemonList: pokeArr, showSpinner: false, showLoadMoreSpinner: false })\r\n        })\r\n    }\r\n\r\n    loadMore() {\r\n        this.setState({ showLoadMoreSpinner: true }, () => {\r\n            fetch(this.state.nextPage, {\r\n                method: 'GET'\r\n            }).then(res => {\r\n                return res.json()\r\n            }).then(data => {\r\n                this.setState({ nextPage: data.next })\r\n                this.loadPokemonInfo(data.results)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    loadAll() {\r\n        this.setState({ showLoadAllSpinner: true }, () => {\r\n            fetch(process.env.REACT_APP_API_URL + \"pokemon/?limit=\" + this.state.totalPokemon, {\r\n                method: 'GET'\r\n            }).then(res => {\r\n                return res.json()\r\n            }).then(data => {\r\n                this.setState({ nextPage: data.next, totalPokemon: data.count })\r\n                this.loadPokemonFilterInfo(data.results)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    filter(filter, filterType) {\r\n        fetch(process.env.REACT_APP_API_URL + filterType + \"/\" + filter, {\r\n            method: 'GET'\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            this.setState({ nextPage: null })\r\n            let aux = []\r\n            data.pokemon.forEach(p => {\r\n                aux.push({ url: p.pokemon.url })\r\n            })\r\n            this.loadPokemonFilterInfo(aux)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        console.log(this.state.searchTerm);\r\n        if (this.state.searchTerm) {\r\n            e.preventDefault();\r\n            this.setState({ showLoadAllSpinner: true }, () => {\r\n                fetch(process.env.REACT_APP_API_URL + \"pokemon/?limit=\" + this.state.totalPokemon, {\r\n                    method: 'GET'\r\n                }).then(res => {\r\n                    return res.json()\r\n                }).then(data => {\r\n                    this.setState({ nextPage: data.next, totalPokemon: data.count, showClearSearch: true })\r\n                    let aux = [];\r\n                    aux = data.results\r\n                    let res = aux.filter(x => x.name.includes(this.state.searchTerm))\r\n                    this.loadPokemonFilterInfo(res)\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    loadPokemonFilterInfo(data, callback) {\r\n        let pokeArr = []\r\n        this.setState({ showSpinner: true }, () => {\r\n            let requests = data.map((item) => {\r\n                return new Promise(resolve => {\r\n                    fetch(item.url, {\r\n                        method: 'GET'\r\n                    }).then(res => {\r\n                        return res.json()\r\n                    }).then(pokemonInfo => {\r\n                        pokeArr.push(pokemonInfo)\r\n                        resolve()\r\n                    }).catch(err => {\r\n                        console.log(err)\r\n                    })\r\n                })\r\n            })\r\n            Promise.all(requests).then(() => {\r\n                this.setState({ pokemonList: pokeArr, showSpinner: false, showLoadAllSpinner: false }, () => {\r\n                    if (callback) {\r\n                        callback()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    showDetail(info) {\r\n        this.setState({ showDetail: true, pokemonDetailInfo: info })\r\n    }\r\n\r\n    closeDetail() {\r\n        this.setState({\r\n            showDetail: false,\r\n            pokemonDetailInfo: {\r\n                abilities: [],\r\n                base_experience: 0,\r\n                forms: [],\r\n                game_indices: [],\r\n                height: 0,\r\n                held_items: [],\r\n                id: 0,\r\n                is_default: true,\r\n                location_area_encounters: \"\",\r\n                moves: [],\r\n                name: \"\",\r\n                order: 0,\r\n                past_types: [],\r\n                species: {},\r\n                sprites: { front_default: \"\" },\r\n                stats: [\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    },\r\n                    {\r\n                        base_stat: 0\r\n                    }\r\n                ],\r\n                types: [],\r\n                weight: 0\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClearSearch() {\r\n        window.location.reload()\r\n    }\r\n\r\n    renderLoadMore() {\r\n        if (this.state.nextPage === null) {\r\n            return <div></div>\r\n        }\r\n\r\n        if (this.state.showLoadMoreSpinner) {\r\n            return <Button variant=\"outline-orng\" onClick={this.loadMore}>\r\n                <Spinner size=\"sm\" animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Cargando...</span>\r\n                </Spinner>\r\n            </Button>\r\n        } else {\r\n            return <Button variant=\"outline-orng\" onClick={this.loadMore}>\r\n                Cargar mas\r\n            </Button>\r\n        }\r\n    }\r\n\r\n    renderLoadAll() {\r\n\r\n        if (this.state.nextPage === null) {\r\n            return <div></div>\r\n        }\r\n\r\n        if (this.state.showLoadAllSpinner) {\r\n            return <Button variant=\"outline-orng\" onClick={this.loadAll}>\r\n                <Spinner size=\"sm\" animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Cargando...</span>\r\n                </Spinner>\r\n            </Button>\r\n        } else {\r\n            return <Button variant=\"outline-orng\" onClick={this.loadAll}>\r\n                Cargar todos\r\n            </Button>\r\n        }\r\n    }\r\n\r\n    renderPokemon() {\r\n        if (this.state.showSpinner) {\r\n            return <div className=\"spinner-container mt-5\">\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Cargando...</span>\r\n                </Spinner>\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                <Row className=\"mx-5\">\r\n                    {this.state.pokemonList.map((i, k) => {\r\n                        return (\r\n                            <Col xs={12} sm={6} md={3} xl={2} xxl={2} key={k}>\r\n                                <Card className=\"my-3\">\r\n                                    <Card.Img variant=\"top\" src={i.sprites.front_default} />\r\n                                    <Card.Body>\r\n                                        <Card.Title>{i.name}</Card.Title>\r\n                                        <div className=\"p-3 mb-3\" style={{\r\n                                            border: 'solid',\r\n                                            borderWidth: '1px',\r\n                                            borderColor: 'lightgray',\r\n                                            borderRadius: '15px'\r\n                                        }}>\r\n                                            <Row className=\"p-2\">\r\n                                                {i.types.map((j, l) => {\r\n                                                    return (\r\n                                                        <Col key={l}>{j.type.name}</Col>\r\n                                                    )\r\n                                                })}\r\n                                            </Row>\r\n                                            <Row className=\"p-2\">\r\n                                                <Col>{i.height / 10} m</Col>\r\n                                                <Col>{i.weight / 10} kg</Col>\r\n                                            </Row>\r\n\r\n                                        </div>\r\n\r\n                                        <Button variant=\"orng\" onClick={() => this.showDetail(i)}>Ver detalles</Button>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n                <Row className=\"m-3\" style={{ justifyContent: 'center' }}>\r\n                    <ButtonGroup>\r\n                        {this.renderLoadMore()}\r\n                        {this.renderLoadAll()}\r\n                    </ButtonGroup>\r\n\r\n                </Row>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    renderClearSearch() {\r\n        if (this.state.showClearSearch) {\r\n            console.log(\"entra\", this.state.searchTerm);\r\n            return <Button variant='danger' onClick={this.handleClearSearch}>X</Button>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    renderFilters() {\r\n        return <Row className=\"mt-3\">\r\n            <Col xs={1}></Col>\r\n            <Col xs={10}>\r\n                <Form onSubmit={this.handleSearch} noValidate>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <Button variant='outline-orng' type='submit'>\r\n                                Filtrar\r\n                            </Button>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            placeholder=\"Buscar...\"\r\n                            aria-label=\"Search\"\r\n                            onChange={this.onSearchChange}\r\n                        />\r\n                        {this.renderClearSearch()}\r\n\r\n                        <DropdownButton variant='outline-orng' className=\"ml-4\" id=\"dropdown-basic-button\" title=\"Type\">\r\n                            {this.state.typesList.map((i, k) => {\r\n                                return (\r\n                                    <Dropdown.Item key={k} onClick={() => this.filter(i, \"type\")}>{i}</Dropdown.Item>\r\n                                )\r\n                            })}\r\n                        </DropdownButton>\r\n                    </InputGroup>\r\n                </Form>\r\n            </Col>\r\n            <Col xs={1}></Col>\r\n        </Row>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PokemonDetail show={this.state.showDetail} pokemon={this.state.pokemonDetailInfo} close={this.closeDetail} />\r\n                {this.renderFilters()}\r\n                {this.renderPokemon()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonList;","import './App.css';\nimport Footer from './components/Footer';\nimport ItemsList from './components/ItemsList';\nimport Navmenu from './components/Navmenu';\nimport PokemonList from './components/PokemonList';\nimport { BrowserRouter as Router, Switch, Route, } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <style type=\"text/css\">\n          {`\n          .btn-orng {\n              background-color: #FF462C;\n              color: #FFF;\n          }\n          .btn-orng:hover {\n              color:#fff;\n              background-color:#DB412B;\n              border-color:#DB412B;\n          }\n          .btn-outline-orng {\n              background-color: #fff;\n              border-color: #FF462C;\n              color: #FF462C;\n          }\n          .btn-outline-orng:hover {\n              color:#fff;\n              background-color:#FF462C;\n              border-color:#FF462C\n          }\n          `}\n        </style>\n        <Navmenu />\n        <Switch>\n          <Route exact path='/'>\n            <PokemonList />\n          </Route>\n          <Route exact path='/items'>\n            <ItemsList />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}